# This file in /pipresents/pp_resources/pp_templates may be overwritten by updates and is not used by Pi Presents
# You must copy the file to the profile that is to use it. Place it in the directory /myprofile/pp_io_config.

# There is little checking of the content of this file by Pi Presents, try any changes by
#  running from a terminal window so that any exceptions are reported

# USE
# ===
# This is an example configuration file for the i/o plugin pp_DRV2605driver.py

# it defines output events and maps them to I2C device outputs


# DRIVER SECTION
# ===============
# title = MY DEVICE   text which is reported on logs and error reports
# enabled = yes   yes/no a driver can be enabled/disabled using this so this file can be left in pp_io_config
# module = pp_DRV2605driver -  the python module that implements this driver (without .py). More than one I/O config file can use the same driver.
# device-type - The type of actuator connected to the DRV2605, ERM or LRA      
# library -  The Immersion TS2200 library to be used for sequence playing
#            for LRA, Pi Presents selects the only library.
#            for ERM, library should be specified depending on the actuator from TS2200 A TS2200 B TS2200 C TS2200 D 
#            Loop Mode depends on device, mode, and Library see the manual

# OUTPUT SECTIONS
# ==============
# Every section has a section name e.g. [MYSECTION1] - it may be any single word provided it is unique
# 

# name  - specifies which device the section is for - DRV2605

# type - specifies the parameter types that will be accepted and/or the action to be done
#        if name and type match the animation command then the command will be considered for execution by DR2605driver
#        there can be more than one section for a name each with a different type value.
#        this allows different preset commands for each device

# The types are:
#        sequence-name - play the sequence specified in the sequence field
#        sequence - play the sequence specified in the animation command. All other parameters are specified in the section
#        stop-sequence - stop playing a sequence
#        audio-vibe-name - start audio to vibe with the parameters in the section
#        stop-audio-vibe - stop audio to vibe and reset the DRV2605
     
# Fields of sequence and sequence-name
#        sequence-name - name to match the animation command
#        loop-type - Open Loop, Closed Loop  see manual
#        sequence - comma seperated list of integers. maximum 8
#                   positive values between 1 and 123 select the vibe from the library
#                   negative values between -1 and -127 provide a delay im mS.
#        trigger -  Internal Trigger, Edge Trigger, Level Trigger, see datasheet

# Fields for audio-vibe-name
#         vibe-name - name to match the animation command
#         max-input - 0 to 1.8, maximum input in Volts. smaller value increases gain of DRV2605    
#         min-input - 0 to 1.8, minimum input level in Volts. Cuts out low level signals

# The REAL STUFF below gives an example of every animation command that I have implemented. Others could be added.

# NOTE: in the animation command strings containing spaces must be surrounded by double quotes
# e.g. "01 02", "this is a string" 


# INPUT SECTIONS
# ==============
# There are no input sections

# THE REAL STUFF
# ==============


[DRIVER]
title = DRV2605
enabled = yes
module = pp_DRV2605driver
device-type = ERM              ; ERM or LRA      
library = TS2200 A              ;ERM library - TS2200 A TS2200 B TS2200 C TS2200 D 

# animate command - 0 DRV2605 sequence-name sequence1
[seq_1]
name = DRV2605
type = sequence-name
sequence-name = sequence1
loop-type = Open Loop
sequence = 16,2,16,7
trigger = Internal Trigger        ; Internal Trigger, Edge Trigger, Level Trigger

# animate command - 0 DRV2605 sequence-name sequence2
[seq_3]
name = DRV2605
type = sequence-name
sequence-name = sequence2
loop-type = Open Loop
sequence = 16,-123,16,-123,16
trigger = Internal Trigger

# animate command  - 0 DRV2605 sequence 1,2,-3,4    NO SPACES IN THE FIELDS UNLESS USING ""
# sequence is provided in the animate command
[seq_2]
name = DRV2605
type = sequence
loop-type = Open Loop
trigger = Internal Trigger

# animate command  - 0 DRV2605 stop-sequence
[stop]
name = DRV2605
type = stop-sequence

 
# animate command  -  0 DRV2605 audio-vibe default
# default values from the datasheet
[audio-vibe1]
name = DRV2605
type = audio-vibe-name
vibe-name = default
loop-type = Closed Loop
max-input = 1.8        ;0 to 1.8, maximum input in Volts. smaller value increases gain of DRV2605
min-input = 0.18         ; minimum input level in Volts. Cuts out low level signals

# animatecommand  -  0 DRV2605 audio-vibe rpi
# values that work with RPi having 1uF capacitor between A/V output and DRV2605 Audio In 
[audio-vibe2]
name = DRV2605
type = audio-vibe-name
vibe-name = rpi
loop-type = Closed Loop
max-input = 0.025        ;0 to 1.8, maximum input in Volts. smaller value increases gain of DRV2605
min-input = 0.0          ; minimum input level in Volts. Cuts out low level signals

# animate command - 0 DRV2605 stop-audio-vibe
[stop-audio-vibe]
name=DRV2605
type=stop-audio-vibe
