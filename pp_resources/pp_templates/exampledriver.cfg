# !! BEWARE !!
# Accidentally using a pin as an output with the output shorted will break your Pi,
# always use a series resistor on every input and output.
# Subjecting inputs to voltages outside the Pi's allowable range will break your Pi even with the series resistor.

# This file in /pipresents/pp_resources/pp_templates may be overwritten by updates and is not used by Pi Presents
# copy the file to the profile that is to use it.

# There is no checking of the content of this file by Pi Presents, try any changes by
#  running from a terminal window so that any exceptions are reported

# USE
# ===
# This is a small configuration file for the pp_exampledriver.py 
# The driver does not do any physical I/O. Instead it:

# 	a. Generates an input event with the symbiloc name tick_name at the interval tick_interval
	
# 	b. Accepts an animation command and prints a message to the terminal with the paramters of the message.
	
# 			The plugin responds to the symbolic name message_name and prints the text message_text
			
# The parameters are in the [driver] section, more complex plugins might keep their configuration in other sections


# DRIVER SECTION
# ==============
# required fields
# title = EXAMPLE I/O PLUGIN   text which is reported on logs and error reports
# enabled = yes   yes/no a driver can be enabled/disabled using this so this file can be left in pp_io_config
# module= pp_exampledriver the python module that implements this driver (without .py). More than one I/O config file can use the same driver.


# THE REAL STUFF
# -------

[DRIVER]
title = EXAMPLE I/O PLUGIN
enabled = yes
module= pp_exampledriver

tick-name = tick
tick-interval = 5
message-name = send-message
message-text = my message


