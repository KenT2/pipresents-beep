# This file in /pipresents/pp_resources/pp_templates may be overwritten by updates and is not used by Pi Presents
# copy the file to the pp_io_config directory of the profile that is to use it.

# There is no checking of the content of this file by Pi Presents, try any changes by
#  running from a terminal window so that any exceptions are reported.





# USE
# ===
# This configuration file is for an enhanced versio of the Tkinter keyboard driver - pp_kbddriver_plus.py
# It allows input events to be generated when a specific-character, any-character, specific-line, or any-line is detected.
# It is useful if a track plugin is used that reads text from the keyboard, such as quizes.

# !!! NOTE: If using this alternative Tkinter keyboard driver include a dummy disabled keys.cfg in the profile 
#     or remove keys.cfg from /pipresents/pp_io_config

# DRIVER SECTION
# ================
# title = TKINTER KEYS PLUS  text which is reported on logs and error reports
# enabled = yes   yes/no a driver can be enabled/disabled using this so this file can be left in pp_io_config
# module= pp_kbddriver_plus the python module that implements this driver (without .py). More than one I/O config file can use the same driver.
# bind-printing - yes/no - see keys section

# All I/O SECTIONS
# ================
#    direction - in,out,none  if not in then the section is ignored. out is currently not used in keys_plus.cfg


# INPUT SECTIONS
# ===============
# section name can be any word but must be unique
# direction = in otherwise the section is ignored
# mode - specific-character, any-character, specific-line, any-line
# name  - the symbolic name of the event which is generated if the input matches the match
# match - the condition for matching 

# for mode = specific character
# match may be:
# . a printable (non-special) character
# . a special key which is a name enclosed in <> e.g. <Up> 
# . <Return> cannot be used as it is used to detect end of line

#    Theses terms are defined in
#    effbot.org/tkinterbook/tkinter-events-and-bindings.htm  in the <Return>, a, and <Shift-Up> sections.

# In additon to the specific-character input sections if bind-printing = yes in the [DRIVER] section all the printable (non-special) characters
# (the ones obeying the <Key> condition in the reference) are automatically bound by Pi Presents to the
# symbolic name pp-key-x   e.g the 'a' key produces pp-key-a
# automatic binding of printing keys can be overriden by individual specific-character input sections.

# the match conditions and the symbolic names are case sensitive.



# THE REAL STUFF
# ==============

[DRIVER]
title = Tkinter Keys Plus  
enabled = yes
bind-printing = no
module= pp_kbddriver_plus


[PP01]
# bind CTRL-BREAK key for terminating (aborting) Pi Presents
direction = in
mode = specific-character 
match = <Break>
name = pp-terminate

[PP02]
# alternative for keyboards without BREAK key
direction = none
mode = specific-character 
match = <Control-F1>
name  = pp-terminate   ; make CTRL+F1 do an exit in addition to CTRL+BREAK

# DIRECT SYMBOLIC NAMES
# =====================
# pp-shutdownnow and pp-exitpipresents symbolic names cannot be used in the Controls Field of tracks and shows, they operate
# on Pi Presents directly. Use Show Control commands if you want to do the tasks below from a profile.

[PP03]
#  if enabled pressing the k key will cause PP to shutdown the Pi immediately
direction = none
mode = specific-character 
match = k
name = pp-shutdownnow 

[PP04]
#  if enabled pressing the e key will cause PP to exit immediately
direction = none
mode = specific-character 
match = e
name = pp-exitpipresents

[ST01]
direction = in
mode = specific-character 
match = <Escape>
name = pp-stop

[ST02]
direction = in
mode = specific-character 
match = <Up>
name = pp-up

[ST03]
direction = in
mode = specific-character 
match = <Down>
name = pp-down

[ST04]
direction = in
mode = specific-character 
match = <Return>
name = pp-play
# return is also used for eol detection so cannot be used if there is specific-line or any-line sections

[ST05]
direction = in
mode = specific-character
match = <space>
name = pp-pause


[ST06]
# make key 'a' toggle pause in addition to the spacebar
# if bind-printing = yes and this section is enabled the 'a' key will not be bound to pp-key-a
direction = in
mode = specific-character 
match = a
name = pp-pause

# generate the any-character event if any character is typed
[ST07]
direction = in
mode = any-character 
name = any-character


[ST08]
# generate an any-line event when Return is pressed
# alternative to Return for detecting end of line
direction = in
mode = any-line 
name = any-line


[ST09]
# detect a specific string when return is pressed after typing again
direction = in
mode = specific-line
match = again
name = specific-line


